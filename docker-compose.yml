services:
  app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ./src/backend/ruby:/app
    ports:
      - '4567:4567'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    networks:
      - mynetwork
    command: bundle exec ruby app.rb
    depends_on:
      - postgres
      - redis
      - prometheus # Ensure that Prometheus is available for Grafana and app monitoring

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - whoknows_variations_postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - mynetwork
    ports:
      - '5432:5432'

  postgres_exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@postgres:5432/postgres?sslmode=disable
    ports:
      - '9187:9187' # Expose the metrics port
    networks:
      - mynetwork
    depends_on:
      - postgres

  redis:
    image: redis:latest
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    networks:
      - mynetwork

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'admin' # Set Grafana admin password (you can change this)
    volumes:
      - grafana_data:/var/lib/grafana # Persist Grafana data
    ports:
      - '3000:3000'
    networks:
      - mynetwork
    depends_on:
      - prometheus

networks:
  mynetwork:
    driver: bridge

volumes:
  whoknows_variations_postgres_data:
    external: true
  grafana_data:
    external: true
